<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	Configuration 요소는 log4j 설정의 가장 최상위 요소이다.
	status 속성은 log4j 내부 이벤트에 대한 로그 레벨을 의미한다.
-->
<!-- <Configuration status="DEBUG"> -->
<Configuration status="INFO">
	<!-- 로그의 출력 위치를 지정해주는 요소 (콘솔, 파일 DB, OutputStream 등등) -->
	<Appenders>
		<!-- 콘솔에 로그 메시지를 출력한다. -->
		<!-- 표준 출력 : console -->
		<!-- target : 실제로 로그를 출력하는 위치 -->
		<Console name="console" target="SYSTEM_OUT">
			<!-- 로그의 출력 포맷을 지정한다. -->
			<!-- [%-5level] : 기록 시간 -->
			<!-- %d{yyyy-MM-dd HH:mm:ss.SSS} : 날짜포맷 -->
			<!-- [%t] : 쓰레드 -->
			<!-- %c{5} : 로그가 발생한 클래스 (현재 5단계까지 보여줌) -->
			<!-- %M : 어떤 메소드에서 출력이 됐는지 -->
			<!-- %msg : 로그를 찍어주는 메세지를 의미 -->
			<!-- %n : 개행 (줄바꿈) -->
			<PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{5} %M - %msg - %n"/>
		</Console>
		<!-- 파일에 로그 메시지를 출력한다. -->
		<File name="member_file" filename="./logs/member_log.txt">
			<PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{5} %M - %msg - %n"/>
		</File>
		<File name="board_file" filename="./logs/board_log.txt">
			<PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{5} %M - %msg - %n"/>
		</File>
   </Appenders>
   <!-- 로깅이 일어나는 부분을 그룹화 하는 역할을 한다. -->
   <!-- 로그 레벨 (높은 레벨에서 낮은 레벨 순서) -->
   <!-- FATAL(치명적, 서버가 아예 안된다고 보면 된다.) > ERROR(요청을 처리하거나 작업중) > WARN(경고, 에러는 아니지만 주의 필요) > INFO(일반적인 정보) > DEBUG(좀 더 상세한 정보가 필요할때) > TRACE(경로추적) > ALL(전부) -->
   <Loggers>
   		<!-- 일반적인 로그 정책을 의미 -->
   		<!-- 레벨을 지정하면 (예시)INFO 포함하여 윗 단계까지 찍어준다. -->
	   <!-- <Root level="INFO"> -->
	   <Root level="DEBUG">
	   		<AppenderRef ref="console"/>
	   </Root>
	   
	   <!-- 추가로 필요한 로그 정책을 정의 -->
	   <Logger name="com.kh.mybatis.member" level="DEBUG">
	   		<AppenderRef ref="member_file"/>
	   </Logger>
	   <Logger name="com.kh.mybatis.board" level="DEBUG">
	   		<AppenderRef ref="board_file"/>
	   </Logger>
	   
   </Loggers>
</Configuration>